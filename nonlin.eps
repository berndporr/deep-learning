%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 329 223 669 389 
%%LanguageLevel: 3
%%Creator: CorelDRAW
%%Title: nonlin.eps
%%CreationDate: Sun Apr 24 22:59:24 2022
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 3 def
%Build: CorelDRAW Version 14.0.0.653
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{fill_color $o
set_current_color{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}
if outl_color $O set_current_color{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0
exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
653.34699 292.04220 665.13515 309.53820 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
654.83490 292.30214 m
654.59906 294.28214 L
655.06309 294.15798 655.46306 294.09420 655.80690 294.09420 c
656.27490 294.09420 656.65106 294.17414 656.93112 294.33005 c
657.21487 294.48624 657.44306 294.70224 657.62306 294.98598 c
657.75912 295.19405 657.97115 295.71817 658.26709 296.55411 c
658.30706 296.67402 658.37112 296.84211 658.45502 297.07002 C
653.73506 309.53820 L
656.00702 309.53820 L
658.59902 302.33424 l
658.93096 301.41808 659.23512 300.45798 659.49902 299.44998 C
659.74309 300.41802 660.03109 301.36224 660.36699 302.28605 c
663.02702 309.53820 L
665.13515 309.53820 L
660.40299 296.88208 l
659.89502 295.51408 659.49902 294.57411 659.21896 294.05820 c
658.84309 293.36202 658.41506 292.85405 657.93090 292.53005 c
657.44306 292.20605 656.86706 292.04220 656.19496 292.04220 c
655.78706 292.04220 655.33493 292.13008 654.83490 292.30214 C
@c
F

@rax %Note: Object
665.42598 282.94016 668.20394 295.82504 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
666.61994 294.00406 m
666.61994 295.82504 L
668.20394 295.82504 L
668.20394 294.00406 L
666.61994 294.00406 L
@c
666.61994 282.94016 m
666.61994 292.27323 L
668.20394 292.27323 L
668.20394 282.94016 L
666.61994 282.94016 L
@c
F

@rax %Note: Object
460.78724 290.01543 463.56520 302.90031 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
461.98120 301.07934 m
461.98120 302.90031 L
463.56520 302.90031 L
463.56520 301.07934 L
461.98120 301.07934 L
@c
461.98120 290.01543 m
461.98120 299.34850 L
463.56520 299.34850 L
463.56520 290.01543 L
461.98120 290.01543 L
@c
F

@rax %Note: Object
352.91991 353.54268 364.70806 371.03868 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
354.40781 353.80261 m
354.17197 355.78261 L
354.63600 355.65846 355.03597 355.59468 355.37981 355.59468 c
355.84781 355.59468 356.22397 355.67461 356.50403 355.83052 c
356.78778 355.98671 357.01597 356.20271 357.19597 356.48646 c
357.33203 356.69452 357.54406 357.21865 357.84000 358.05458 c
357.87997 358.17449 357.94403 358.34258 358.02794 358.57049 C
353.30797 371.03868 L
355.57994 371.03868 L
358.17194 363.83471 l
358.50387 362.91855 358.80803 361.95846 359.07194 360.95046 C
359.31600 361.91849 359.60400 362.86271 359.93991 363.78652 c
362.59994 371.03868 L
364.70806 371.03868 L
359.97591 358.38255 l
359.46794 357.01455 359.07194 356.07458 358.79187 355.55868 c
358.41600 354.86249 357.98797 354.35452 357.50381 354.03052 c
357.01597 353.70652 356.43997 353.54268 355.76787 353.54268 c
355.35997 353.54268 354.90784 353.63055 354.40781 353.80261 C
@c
F

@rax %Note: Object
364.17402 340.65156 367.75899 357.32551 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
366.17783 355.48951 m
366.17783 357.32551 L
367.75899 357.32551 L
367.75899 355.48951 L
366.17783 355.48951 L
@c
364.17402 340.81965 m
364.47080 342.16356 L
364.78885 342.08249 365.03802 342.04054 365.21802 342.04054 c
365.54202 342.04054 365.78183 342.14854 365.93802 342.36170 c
366.09704 342.57458 366.17783 343.11175 366.17783 343.96668 c
366.17783 353.77370 L
367.75899 353.77370 L
367.75899 343.93068 l
367.75899 342.78151 367.60904 341.98356 367.31197 341.53058 c
366.93099 340.94551 366.29802 340.65156 365.41304 340.65156 c
364.98387 340.65156 364.57002 340.70854 364.17402 340.81965 C
@c
F

@rax %Note: Object
350.19865 245.78079 361.98680 263.27679 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
351.68655 246.04072 m
351.45071 248.02072 L
351.91474 247.89657 352.31471 247.83279 352.65855 247.83279 c
353.12655 247.83279 353.50271 247.91272 353.78277 248.06863 c
354.06652 248.22482 354.29471 248.44082 354.47471 248.72457 c
354.61077 248.93263 354.82280 249.45676 355.11874 250.29269 c
355.15871 250.41260 355.22277 250.58069 355.30668 250.80860 C
350.58671 263.27679 L
352.85868 263.27679 L
355.45068 256.07282 l
355.78261 255.15666 356.08677 254.19657 356.35068 253.18857 C
356.59474 254.15660 356.88274 255.10082 357.21865 256.02463 c
359.87868 263.27679 L
361.98680 263.27679 L
357.25465 250.62066 l
356.74668 249.25266 356.35068 248.31269 356.07061 247.79679 c
355.69474 247.10060 355.26671 246.59263 354.78255 246.26863 c
354.29471 245.94463 353.71871 245.78079 353.04661 245.78079 c
352.63871 245.78079 352.18658 245.86866 351.68655 246.04072 C
@c
F

@rax %Note: Object
361.45276 232.88967 365.03773 249.56362 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
363.45657 247.72762 m
363.45657 249.56362 L
365.03773 249.56362 L
365.03773 247.72762 L
363.45657 247.72762 L
@c
361.45276 233.05776 m
361.74954 234.40167 L
362.06759 234.32060 362.31676 234.27865 362.49676 234.27865 c
362.82076 234.27865 363.06057 234.38665 363.21676 234.59981 c
363.37578 234.81269 363.45657 235.34986 363.45657 236.20479 c
363.45657 246.01181 L
365.03773 246.01181 L
365.03773 236.16879 l
365.03773 235.01962 364.88778 234.22167 364.59071 233.76869 c
364.20973 233.18362 363.57676 232.88967 362.69178 232.88967 c
362.26261 232.88967 361.84876 232.94665 361.45276 233.05776 C
@c
F

@rax %Note: Object
426.96595 275.29398 482.47965 330.80769 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
454.72280 330.80769 m
470.05002 330.80769 482.47965 318.37805 482.47965 303.05083 c
482.47965 287.72362 470.05002 275.29398 454.72280 275.29398 c
439.39559 275.29398 426.96595 287.72362 426.96595 303.05083 c
426.96595 318.37805 439.39559 330.80769 454.72280 330.80769 c
@c
S

@rax %Note: Object
332.81036 332.44044 388.32406 387.95414 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
360.56721 387.95414 m
375.89443 387.95414 388.32406 375.52450 388.32406 360.19729 c
388.32406 344.87008 375.89443 332.44044 360.56721 332.44044 c
345.24000 332.44044 332.81036 344.87008 332.81036 360.19729 c
332.81036 375.52450 345.24000 387.95414 360.56721 387.95414 c
@c
S

@rax %Note: Object
330.08910 224.67855 385.60280 280.19225 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
357.84595 280.19225 m
373.17317 280.19225 385.60280 267.76261 385.60280 252.43540 c
385.60280 237.10819 373.17317 224.67855 357.84595 224.67855 c
342.51874 224.67855 330.08910 237.10819 330.08910 252.43540 c
330.08910 267.76261 342.51874 280.19225 357.84595 280.19225 c
@c
S

@rax %Note: Object
376.89477 283.63805 392.41077 295.05402 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
386.38687 294.62995 m
386.38687 295.05402 L
387.70668 295.05402 388.78668 294.83008 389.62290 294.37795 c
390.45883 293.93008 391.13093 293.20611 391.64287 292.21002 c
392.15480 291.21392 392.41077 290.12202 392.41077 288.93402 c
392.41077 287.92602 392.21093 287.00589 391.81096 286.16995 c
391.41496 285.33402 390.87071 284.70189 390.17877 284.27811 c
389.48683 283.85008 388.82693 283.63805 388.20274 283.63805 c
387.51477 283.63805 386.93083 283.83392 386.44668 284.22595 c
385.96280 284.61402 385.52683 285.22205 385.14671 286.04211 C
384.71471 285.21411 384.23083 284.60608 383.68687 284.21802 c
383.14290 283.83392 382.53487 283.63805 381.86277 283.63805 c
381.27883 283.63805 380.65890 283.84611 380.00665 284.26592 c
379.35468 284.68205 378.82687 285.33005 378.43087 286.19802 c
378.03090 287.06995 377.83077 288.01417 377.83077 289.03011 c
377.83077 290.12995 378.05471 291.13398 378.49890 292.04192 c
378.84274 292.74605 379.28268 293.32602 379.81871 293.78608 c
380.35474 294.25011 380.92280 294.57411 381.52290 294.76602 c
382.12668 294.95792 382.89090 295.05402 383.81868 295.05402 C
383.81868 294.62995 L
382.73471 294.52195 381.83868 294.00605 381.13087 293.09017 c
380.42277 292.17005 380.07071 290.82217 380.07071 289.04202 c
380.07071 287.28198 380.33887 285.99392 380.87887 285.17414 c
381.20683 284.68205 381.66690 284.43402 382.26274 284.43402 c
382.75483 284.43402 383.22283 284.63811 383.66277 285.04602 c
384.10271 285.44995 384.47887 286.18611 384.79493 287.24995 C
384.45080 288.16214 384.22687 288.84217 384.11887 289.28608 c
384.01483 289.73395 383.96268 290.15802 383.96268 290.56592 c
383.96268 291.32192 384.13871 291.97417 384.48680 292.52211 c
384.65887 292.79395 384.86268 292.93002 385.09880 292.93002 c
385.33890 292.93002 385.54668 292.79395 385.71874 292.52211 c
386.05493 292.00592 386.22274 291.37805 386.22274 290.63395 c
386.22274 289.72998 385.97074 288.59811 385.46277 287.24995 C
385.76693 286.17789 386.12268 285.45789 386.53483 285.08598 c
386.94274 284.71408 387.40677 284.53011 387.92268 284.53011 c
388.53071 284.53011 389.02280 284.76595 389.39896 285.24614 c
389.90693 285.88592 390.15893 287.08611 390.15893 288.84217 c
390.15893 290.97411 389.68696 292.55017 388.74274 293.56611 c
388.17071 294.18208 387.38693 294.53811 386.38687 294.62995 C
@c
F

@rax %Note: Object
400.84186 340.78450 416.35786 352.20047 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
410.33395 351.77641 m
410.33395 352.20047 L
411.65376 352.20047 412.73376 351.97654 413.56998 351.52441 c
414.40592 351.07654 415.07802 350.35257 415.58995 349.35647 c
416.10189 348.36038 416.35786 347.26847 416.35786 346.08047 c
416.35786 345.07247 416.15802 344.15235 415.75805 343.31641 c
415.36205 342.48047 414.81780 341.84835 414.12586 341.42457 c
413.43392 340.99654 412.77402 340.78450 412.14983 340.78450 c
411.46186 340.78450 410.87792 340.98038 410.39376 341.37241 c
409.90989 341.76047 409.47392 342.36850 409.09380 343.18857 C
408.66180 342.36057 408.17792 341.75254 407.63395 341.36447 c
407.08998 340.98038 406.48195 340.78450 405.80986 340.78450 c
405.22592 340.78450 404.60598 340.99257 403.95373 341.41238 c
403.30176 341.82850 402.77395 342.47650 402.37795 343.34447 c
401.97798 344.21641 401.77786 345.16063 401.77786 346.17657 c
401.77786 347.27641 402.00180 348.28044 402.44598 349.18838 c
402.78983 349.89250 403.22976 350.47247 403.76580 350.93254 c
404.30183 351.39657 404.86989 351.72057 405.46998 351.91247 c
406.07376 352.10438 406.83798 352.20047 407.76576 352.20047 C
407.76576 351.77641 L
406.68180 351.66841 405.78576 351.15250 405.07795 350.23663 c
404.36986 349.31650 404.01780 347.96863 404.01780 346.18847 c
404.01780 344.42844 404.28595 343.14038 404.82595 342.32060 c
405.15392 341.82850 405.61398 341.58047 406.20983 341.58047 c
406.70192 341.58047 407.16992 341.78457 407.60986 342.19247 c
408.04980 342.59641 408.42595 343.33257 408.74202 344.39641 C
408.39789 345.30860 408.17395 345.98863 408.06595 346.43254 c
407.96192 346.88041 407.90976 347.30447 407.90976 347.71238 c
407.90976 348.46838 408.08580 349.12063 408.43389 349.66857 c
408.60595 349.94041 408.80976 350.07647 409.04589 350.07647 c
409.28598 350.07647 409.49376 349.94041 409.66583 349.66857 c
410.00202 349.15238 410.16983 348.52450 410.16983 347.78041 c
410.16983 346.87644 409.91783 345.74457 409.40986 344.39641 C
409.71402 343.32435 410.06976 342.60435 410.48192 342.23244 c
410.88983 341.86054 411.35386 341.67657 411.86976 341.67657 c
412.47780 341.67657 412.96989 341.91241 413.34605 342.39260 c
413.85402 343.03238 414.10602 344.23257 414.10602 345.98863 c
414.10602 348.12057 413.63405 349.69663 412.68983 350.71257 c
412.11780 351.32854 411.33402 351.68457 410.33395 351.77641 C
@c
F

@rax %Note: Object
418.52154 330.82838 426.12350 347.50233 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
420.52535 345.66633 m
420.52535 347.50233 L
422.10652 347.50233 L
422.10652 345.66633 L
420.52535 345.66633 L
@c
418.52154 330.99647 m
418.81833 332.34038 L
419.13638 332.25931 419.38554 332.21735 419.56554 332.21735 c
419.88954 332.21735 420.12935 332.32535 420.28554 332.53852 c
420.44457 332.75140 420.52535 333.28857 420.52535 334.14350 c
420.52535 343.95052 L
422.10652 343.95052 L
422.10652 334.10750 l
422.10652 332.95833 421.95657 332.16038 421.65950 331.70740 c
421.27852 331.12233 420.64554 330.82838 419.76057 330.82838 c
419.33140 330.82838 418.91754 330.88535 418.52154 330.99647 C
@c
F

@rax %Note: Object
418.52154 330.82838 426.12350 347.50233 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
424.53950 345.68135 m
424.53950 347.50233 L
426.12350 347.50233 L
426.12350 345.68135 L
424.53950 345.68135 L
@c
424.53950 334.61745 m
424.53950 343.95052 L
426.12350 343.95052 L
426.12350 334.61745 L
424.53950 334.61745 L
@c
F

@rax %Note: Object
394.57446 273.68192 402.17641 290.35587 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
396.57827 288.51987 m
396.57827 290.35587 L
398.15943 290.35587 L
398.15943 288.51987 L
396.57827 288.51987 L
@c
394.57446 273.85002 m
394.87124 275.19392 L
395.18929 275.11285 395.43846 275.07090 395.61846 275.07090 c
395.94246 275.07090 396.18227 275.17890 396.33846 275.39206 c
396.49748 275.60494 396.57827 276.14211 396.57827 276.99704 c
396.57827 286.80406 L
398.15943 286.80406 L
398.15943 276.96104 l
398.15943 275.81187 398.00948 275.01392 397.71241 274.56094 c
397.33143 273.97587 396.69846 273.68192 395.81348 273.68192 c
395.38431 273.68192 394.97046 273.73890 394.57446 273.85002 C
@c
F

@rax %Note: Object
394.57446 273.68192 402.17641 290.35587 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
400.59241 288.53490 m
400.59241 290.35587 L
402.17641 290.35587 L
402.17641 288.53490 L
400.59241 288.53490 L
@c
400.59241 277.47099 m
400.59241 286.80406 L
402.17641 286.80406 L
402.17641 277.47099 L
400.59241 277.47099 L
@c
F

@rax %Note: Object
385.05855 316.65713 429.14296 346.59099 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
385.05855 346.59099 m
421.99228 321.51260 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.99162 1.99162 0 @w
424.23761 326.28076 m
429.14296 316.65713 L
418.38860 317.66655 L
424.23761 326.28076 L
f
@J

@rax %Note: Object
384.51430 263.32044 431.86422 288.90028 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
384.51430 263.32044 m
424.24214 284.78268 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.99616 1.99616 0 @w
421.03843 288.98249 m
431.86422 288.90028 L
425.99849 279.80079 L
421.03843 288.98249 L
f
@J

@rax %Note: Object
592.43981 301.41751 648.50031 301.41865 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
592.43981 301.41808 m
639.81978 301.41808 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
638.99575 306.64630 m
648.50031 301.41808 L
638.99575 296.18986 L
638.99575 306.64630 L
f
@J

@rax %Note: Object
529.27257 283.96091 591.33345 317.71332 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
529.27257 317.71332 m
591.33345 317.71332 L
591.33345 283.96091 L
529.27257 283.96091 L
529.27257 317.71332 L
@c
S

@rax %Note: Object
481.90110 302.53550 530.88378 302.53663 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 2.00013 2.00013 0.00000 @w
481.90110 302.53606 m
522.20324 302.53606 L
S
@j
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 2.00013 2.00013 0 @w
521.37921 307.76428 m
530.88378 302.53606 L
521.37921 297.30784 L
521.37921 307.76428 L
f
@J

@rax %Note: Object
449.79024 300.35906 461.51036 312.80315 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
454.83024 300.35906 m
450.09411 312.80315 L
452.32214 312.80315 L
454.99436 305.35115 l
455.28236 304.54696 455.54627 303.71102 455.79033 302.84306 C
455.97827 303.49899 456.23820 304.28702 456.57439 305.21112 c
459.34214 312.80315 L
461.51036 312.80315 L
456.79833 300.35906 L
454.83024 300.35906 L
@c
F

@rax %Note: Object
552.65386 292.91981 569.56592 309.53594 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
553.52183 301.09975 m
553.52183 303.52394 554.29795 305.53597 555.85389 307.13584 c
557.40586 308.73572 559.28976 309.53594 561.50192 309.53594 c
563.71380 309.53594 565.60989 308.73175 567.18992 307.12394 c
568.77392 305.51584 569.56592 303.57184 569.56592 301.29987 c
569.56592 298.95591 568.77789 296.97165 567.20183 295.35165 c
565.63002 293.73165 563.72202 292.91981 561.47783 292.91981 c
559.07376 292.91981 557.09376 293.80791 555.54973 295.57984 c
554.19789 297.14372 553.52183 298.98369 553.52183 301.09975 c
@c
556.20595 301.13575 m
556.20595 298.64381 556.71789 296.78372 557.73780 295.55575 c
558.76195 294.33175 560.02195 293.71578 561.51383 293.71578 c
563.03802 293.71578 564.26202 294.27987 565.19405 295.40381 c
566.31798 296.75565 566.88180 298.70787 566.88180 301.26387 c
566.88180 303.77169 566.31798 305.70378 565.19405 307.06384 c
564.27789 308.15972 563.06976 308.70397 561.56202 308.70397 c
559.76995 308.70397 558.38183 307.93578 557.38998 306.39572 c
556.59798 305.15584 556.20595 303.39978 556.20595 301.13575 c
@c
564.48992 304.01972 m
564.48992 298.52391 L
564.05792 298.52391 L
564.07380 299.02394 564.00576 299.39981 563.85780 299.65975 c
563.70983 299.91572 563.46576 300.11187 563.12986 300.24369 c
562.95780 300.31569 562.64202 300.35169 562.18195 300.35169 c
560.83380 300.35169 l
560.17786 300.35169 559.71383 300.21194 559.43802 299.93981 c
559.16589 299.66769 559.02586 299.19572 559.01792 298.52391 C
558.57402 298.52391 L
558.57402 304.01972 L
559.01792 304.01972 L
559.01792 303.31587 559.15795 302.81981 559.44595 302.53578 c
559.72998 302.25175 560.18580 302.10775 560.80998 302.10775 c
562.19386 302.10775 l
562.86595 302.10775 563.34189 302.25175 563.62195 302.53578 c
563.90598 302.81981 564.04998 303.31587 564.05792 304.01972 C
564.48992 304.01972 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%EOF
